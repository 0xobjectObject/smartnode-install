# Autogenerated - DO NOT MODIFY THIS FILE DIRECTLY 
# If you want to overwrite some of these values with your own customizations,
# please add them to `override/eth2.yml`.
# 
# See https://docs.docker.com/compose/extends/#adding-and-overriding-configuration
# for more information on overriding specific parameters of docker-compose files.

version: "3.7"
services:
  eth2:
    image: {{.GetBeaconContainerTag}}
    user: root
    container_name: {{.Smartnode.ProjectName.Value}}_eth2
    restart: unless-stopped
    stop_grace_period: 3m
    {{- $p2p := (or .ConsensusCommon.P2pPort.Value "9001")}}
    ports:
      - "{{$p2p}}:{{$p2p}}/udp"
      - "{{$p2p}}:{{$p2p}}/tcp"
      {{- if eq .ConsensusClient.Value "lighthouse"}}
      - "{{.Lighthouse.P2pQuicPort.Value}}:{{.Lighthouse.P2pQuicPort.Value}}/udp"
      {{- end}}
      {{- range $entry := .GetBnOpenPorts}}
      - "{{$entry}}"
      {{- end}}
    volumes:
      - {{.Smartnode.DataPath.Value}}/validators:/validators
      - {{.Smartnode.DataPath.Value}}/secrets:/secrets:ro
      - eth2clientdata:/ethclient
      - {{.RocketPoolDirectory}}/scripts:/setup:ro
    networks:
      - net
    environment:
      - NETWORK={{.Smartnode.Network.Value}}
      - EC_CLIENT={{if .ExecutionClientLocal}}{{.ExecutionClient.Value}}{{else}}X{{end}}
      - CC_CLIENT={{if .ConsensusClientLocal}}{{.ConsensusClient.Value}}{{else}}{{.ExternalConsensusClient.Value}}{{end}}
      - EC_HTTP_ENDPOINT={{.GetEcHttpEndpoint}}
      - EC_WS_ENDPOINT={{.GetEcWsEndpoint}}
      - EC_ENGINE_ENDPOINT=http://{{.GetExecutionHostname}}:{{.ExecutionCommon.EnginePort.Value}}
      - EC_ENGINE_WS_ENDPOINT=ws://{{.GetExecutionHostname}}:{{.ExecutionCommon.EnginePort.Value}}
      - CUSTOM_GRAFFITI={{.CustomGraffiti}}
      - ROCKET_POOL_VERSION=v{{.RocketPoolVersion}}
      - BN_P2P_PORT={{$p2p}}
      - BN_API_PORT={{.ConsensusCommon.ApiPort.Value}}
      - BN_MAX_PEERS={{.GetBNMaxPeers}}
      - ENABLE_METRICS={{.EnableMetrics.Value}}
      - BN_METRICS_PORT={{.BnMetricsPort.Value}}
      - EXTERNAL_IP={{.GetExternalIp}}
      - CHECKPOINT_SYNC_URL={{.ConsensusCommon.CheckpointSyncProvider.Value}}
      - DOPPELGANGER_DETECTION={{.IsDoppelgangerEnabled}}
      - BN_ADDITIONAL_FLAGS={{.GetBNAdditionalFlags}}
      - FEE_RECIPIENT_FILE={{.FeeRecipientFile}}
      - ENABLE_BITFLY_NODE_METRICS={{.EnableBitflyNodeMetrics.Value}}
      - BITFLY_NODE_METRICS_SECRET={{.BitflyNodeMetrics.Secret.Value}}
      - BITFLY_NODE_METRICS_ENDPOINT={{.BitflyNodeMetrics.Endpoint.Value}}
      - BITFLY_NODE_METRICS_MACHINE_NAME={{.BitflyNodeMetrics.MachineName.Value}}
      - MEV_BOOST_URL={{.MevBoostUrl}}
      - RETH_ADDRESS={{.Smartnode.GetRethAddress.Hex}}
      - GRAFFITI={{.Graffiti}}
      - ADDON_GWW_ENABLED={{.GraffitiWallWriter.GetEnabledParameter.Value}}
      {{- /* Client-specific values */}}
      {{- if eq .ConsensusClient.Value "teku"}}
      - TEKU_JVM_HEAP_SIZE={{.Teku.JvmHeapSize.Value}}
      - TEKU_ARCHIVE_MODE={{.Teku.ArchiveMode.Value}}
      {{- else if eq .ConsensusClient.Value "prysm"}}
      - BN_RPC_PORT={{.Prysm.RpcPort.Value}}
      {{- else if eq .ConsensusClient.Value "nimbus"}}
      - NIMBUS_PRUNING_MODE={{.Nimbus.PruningMode.Value}}
      {{- end}}
    entrypoint: sh
    command: "/setup/start-bn.sh"
    cap_drop:
      - all
    cap_add:
      - dac_override
    security_opt:
      - no-new-privileges
networks:
  net:
volumes:
  eth2clientdata:
