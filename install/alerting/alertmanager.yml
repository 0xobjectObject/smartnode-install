global:
  # ResolveTimeout is the default value used by alertmanager if the alert does
  # not include EndsAt, after this time passes it can declare the alert as resolved if it has not been updated.
  # This has no impact on alerts from Prometheus, as they always include EndsAt.
  # default = 5m
  resolve_timeout: 5m

route:
  # The labels by which incoming alerts are grouped together.
  group_by: ["alertname"]
  # How long to initially wait to send a notification for a group
  # of alerts. Allows to wait for an inhibiting alert to arrive or collect
  # more initial alerts for the same group.
  group_wait: 30s
  # How long to wait before sending a notification about new alerts that
  # are added to a group of alerts for which an initial notification has
  # already been sent. (Usually ~5m or more.)
  group_interval: 5m
  # How long to wait before sending a notification again if it has already been sent successfully for an alert.
  repeat_interval: 4h
  # The notification destination
  receiver: "node_operator"

receivers:
  - name: "node_operator"
    discord_configs:
      - webhook_url: "https://discord.com/api/webhooks/1206697259694170212/_Pk1eVVgXFLdwU1k0rfwehSvNLiAQJytVV_Ze8QYOhupHnhiB5c8awPBTfuw41lN9GJk"

inhibit_rules:
  # Inhibit rules mute a new alert (target) that matches an existing alert (source).
  - source_match:
      # if the existing alert (source) is severity=critical
      severity: "critical"
    target_match:
      # and the new alert (target) is severity=warning
      severity: "warning"
      # and the alertname, dev, and instance labels have the same value
    equal: ["alertname", "job", "instance"]
