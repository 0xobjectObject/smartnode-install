version: "3.4"
services:
  node-exporter:
    image: prom/node-exporter:v1.2.2
    container_name: ${COMPOSE_PROJECT_NAME}_exporter
    cap_drop:
      - ALL
    user: "65534:65534"
    restart: unless-stopped
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.textfile.directory=/host/textfile_collector"
      - "--web.listen-address=:${EXPORTER_METRICS_PORT:-9103}"
      # Uncomment the line below if you want to monitor the free space of a 2nd disk 
      # - "--path.rootfs=/rootfs"
    volumes:
      - /proc:/host/proc:ro,rslave
      - /sys:/host/sys:ro,rslave
      - /var/lib/node_exporter/textfile_collector:/host/textfile_collector:ro
      # Uncomment the line below if you want to monitor the free space of a 2nd disk 
      # - /:/rootfs:ro
    network_mode: host
  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: ${COMPOSE_PROJECT_NAME}_prometheus
    restart: unless-stopped
    command:
      - "--web.listen-address=:${PROMETHEUS_PORT:-9091}"
      - "--config.file=/etc/prometheus/prometheus.yml"
    # Uncomment the lines below if you want to expose Prometheus to your local network, so other machines can access it
    # ports:
    #   - "${PROMETHEUS_PORT:-9091}:${PROMETHEUS_PORT:-9091}/tcp"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus-data:/prometheus"
    networks:
      - net
    extra_hosts:
      - "host.docker.internal: host-gateway"
  grafana:
    image: grafana/grafana:8.1.1
    container_name: ${COMPOSE_PROJECT_NAME}_grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_HTTP_PORT=${GRAFANA_PORT:-3100}
    ports: 
      - "${GRAFANA_PORT:-3100}:${GRAFANA_PORT:-3100}/tcp"
    volumes:
      - "./grafana-prometheus-datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml"
      - "grafana-storage:/var/lib/grafana"
    networks:
      - net
networks:
  net:
volumes:
  grafana-storage:
  prometheus-data: